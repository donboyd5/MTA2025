---
output: html_document
editor_options: 
  chunk_output_type: console
---

{{< include _setup.qmd >}}

# Make spreadsheet options menu

```{r}
#| label: setup
#| output: false

source(fs::path(DMAIN, "R", "taxrules_and_forecast_functions.R"))

```

```{r}
#| label: get-data
#| output: false

pmtdb <- readRDS(fs::path(PDINTERMEDIATE, "pmtdb_calibrated.rds"))
glimpse(pmtdb)
summary(pmtdb)

```

```{r}
#| label: problem-setup
#| output: false

plan2024 <- make_taxplan("tax2024")

plan1bp <- plan2024
plan1bp$rates$rate <- plan1bp$rates$rate + .0001


prob <- list()
prob$year <- 2025
prob$emp_growth <- .01
prob$avg_wagerate_growth <- .0185
prob$plan1 <- plan2024
prob$plan2 <- plan1bp

prob

# prob$emp_growth <- 0
# prob$avg_wagerate_growth <- 0

```

```{r}
#| label: payroll-cutpoints
#| output: false

# define payroll cuts and labels
legal_cuts <- 4 * c(312.5e3, 375e3, 437.5e3)

(payroll_cuts <- c(0, 500e3, seq(2e6, 10e6, 1e6), Inf, legal_cuts) |> unique() |> sort())
paygroup_labels <- cutlabs(payroll_cuts)

(payroll_cuts_collapsed <- c(0, 2e6, 5e6, 10e6, Inf, legal_cuts) |> unique() |> sort())
paygroup_labels_collapsed <- cutlabs(payroll_cuts_collapsed)

```

```{r}
#| label: prepare-data

pmtfc <- pmtdb_forecast(prob, pmtdb)
summary(pmtfc)

glimpse(pmtfc)
sum(pmtfc$gpayroll) # 684296052215
sum(pmtdb$gpayroll) # 665214377788

sum(pmtfc$gpayroll) / sum(pmtdb$gpayroll)

mta1 <- pmtfc |> 
  mutate(calc_tax(pick(everything()), prob$plan1)) |> 
  rename(taxnow = tax) |> 
  mutate(bpnow = rate * 10000,
         area=ifelse(nyc, "NYC", "suburbs"),
         owner = ifelse(ownerf == 1, "private", "public"),
         taxability = case_when(excluded | exempt ~ "untaxable",
                                low_pay ~ "untaxed",
                                .default = "taxable"),
         tax1bp = .0001 * gpayroll * (taxability == "taxable")) |> 
  mutate(taxnow = taxnow / 1e6,
         tax1bp = tax1bp / 1e6) |> 
  filter(taxability == "taxable")

mta_collapsed <- mta1 |> 
  left_join(paygroup_labels_collapsed |> 
              select(paygroup, lb, ub, paylabel = range_left), 
            # rstudio shows syntax error on between -- it does not like bounds -- but it's valid
            by = join_by(between(gpay_firm, lb, ub, bounds = "[)"))) |> 
   summarise(taxnow = sum(taxnow),
             bpnow = mean(bpnow),
             tax1bp = sum(tax1bp),
            .by=c(owner, area, paygroup, paylabel)) |> 
  arrange(owner, area, paygroup)
mta_collapsed
sum(mta_collapsed$taxnow)

mta_details <- mta1 |> 
  left_join(paygroup_labels |> # paygroup_labels, not paygroup_labels_collapsed
              select(paygroup, lb, ub, paylabel = range_left), 
            # rstudio shows syntax error on between -- it does not like bounds -- but it's valid
            by = join_by(between(gpay_firm, lb, ub, bounds = "[)"))) |> 
   summarise(taxnow = sum(taxnow),
             bpnow = mean(bpnow),
             tax1bp = sum(tax1bp),
            .by=c(owner, area, paygroup, paylabel)) |> 
  arrange(owner, area, paygroup)
mta_details

sum(mta_details$taxnow)

mta_flipped <- mta_collapsed |> 
  pivot_longer(cols = c(taxnow, tax1bp, bpnow)) |> 
  pivot_wider(names_from = c(owner, area), values_fill = 0) |> 
  mutate(private_mta = ifelse(name != "bpnow", 
                              private_NYC + private_suburbs,
                              NA_real_),
         public_mta = ifelse(name != "bpnow", 
                             public_NYC + public_suburbs,
                             NA_real_),
         name = factor(name, levels = c("tax1bp", "taxnow", "bpnow"))) |> 
  relocate(private_mta, .after = private_suburbs) |> 
  mutate(NYC = ifelse(name != "bpnow", 
                      private_NYC + public_NYC,
                      NA_real_),
         suburbs = ifelse(name != "bpnow", 
                          private_suburbs + public_suburbs,
                          NA_real_),
         mta = ifelse(name != "bpnow", 
                      NYC + suburbs,
                      NA_real_)) |> 
  arrange(name, paygroup)

mta_flipped

```

```{r}

options("openxlsx2.numFmt" = "#,##0.00")
# options("openxlsx2.minWidth" = NULL)

wb <- wb_workbook()

wb$
  add_worksheet("flipped_collapsed")$
  add_data(x = mta_flipped)$
  set_col_widths(cols = 2, widths = 25)$
  set_col_widths(cols = 4:12, widths = 14)$
  add_worksheet("collapsed")$
  add_data(x = mta_collapsed)$
  set_col_widths(cols = 4, widths = 25)$
  set_col_widths(cols = 5:7, widths = 14)$
  add_worksheet("details")$
  add_data(x = mta_details)$
  set_col_widths(cols = 4, widths = 25)$
  set_col_widths(cols = 5:7, widths = 14)

# wb_open(wb)

```

```{r}
#| label: write-data

fnbase <- "pmt_options_lookup"
fname <- paste0(fnbase, "_", Sys.Date(), ".xlsx")
fpath <- fs::path(DMAIN, "data_for_mta", fname)
openxlsx2::wb_save(wb, file = fpath, overwrite = TRUE)

```

```{r}
#| label: cleanup
rm(list = ls())
```

```{r stop_here, echo=FALSE}
knitr::knit_exit()
```

```{r}
#| label: write-mta-data
#| output: false

template_fname <- "template_options_lookup.xlsx"
template_path <- fs::path(DMAIN, "data_for_mta", template_fname)

src_note_header <- "Underlying data sources and estimation for 2024:"
src_note1 <- "Quarterly Census of Employment and Wages (QCEW) 2023 for establishments, employment, and payroll by county, industry, and ownership."
src_note2 <- "Values in each county-industry-ownership group allocated to firm-size groups based on patterns in County Business Patterns (CBP) 2022 and Statistics of U.S. Businessses (SUSB) 2021."
src_note3 <- "Database moved forward from 2023 to 2024 using QCEW growth rates for the first 3 quarters of 2024."

fc_note_header <- "Forecast notes -- assumed growth rates from 2024 to 2025:"
fc_data1 <- tibble(h="employment", value=prob$emp_growth)
fc_data2 <- tibble(h="average wages per employee", value=prob$avg_wagerate_growth)

wb <- openxlsx2::wb_load(template_path, sheet = "lookup")

notes_start <- nrow(for_mta_all) + 7

wb$
  # data
  add_data(x = for_mta_all, start_row = 4)$
  # data notes
  add_data(x = src_note_header, 
           dims = wb_dims(rows = notes_start, cols = "A"))$
  add_data(x = src_note1, 
           dims = wb_dims(rows = notes_start + 1, cols = "B"))$
  add_data(x = src_note2, 
           dims = wb_dims(rows = notes_start + 2, cols = "B"))$
  add_data(x = src_note3, 
           dims = wb_dims(rows = notes_start + 3, cols = "B"))$  
  # forecast notes
  add_data(x = fc_note_header, 
           dims = wb_dims(rows = notes_start + 5, cols = "A"))$
  add_data(x = fc_data1, 
           col_names = FALSE,
           dims = wb_dims(rows = notes_start + 6, cols = "B"))$
  add_data(x = fc_data2, 
           col_names = FALSE,
           dims = wb_dims(rows = notes_start + 7, cols = "B"))

wb$
  add_font(dims = "A4:F4", bold = TRUE)$
  add_font(dims = wb_dims(rows = c(notes_start, notes_start + 5), cols = "A"), bold = TRUE)$
  add_numfmt(dims = wb_dims(rows = notes_start + c(6, 7), cols = "C"), numfmt = "0.000%")

fnbase <- "pmt_options_lookup_v2"
fname <- paste0(fnbase, "_", Sys.Date(), ".xlsx")
fpath <- fs::path(DMAIN, "data_for_mta", fname)
openxlsx2::wb_save(wb, file = fpath, overwrite = TRUE)

```
