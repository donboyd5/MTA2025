---
output: html_document
editor_options: 
  chunk_output_type: console
---

{{< include _setup.qmd >}}

# DOB PMT revenue option 2025-04-28

-   July 1, 2025
-   SLG employers in suburbs eliminate PMT
-   private employers \> \$10m +29.5bp
-   1.25-1.5 million cut rate from 11bp to 5.5bp
-   1.5m to 1.75m from 23bp to 11.5bp
-   raise self-employment threshold \$50k to \$150k

points of reference:

-   DOB CY 2025 FULL YEAR \$1.37 billion
-   DOB CY 2026 \$1.443 billion
-   KW: DOB about 10% higher per basis point
-   KW: DOB private 1 bp \> 10m private \$40.75 bp in 2025 I think -- I get
-   KW: DOB \$44.65 all private in 2023

```{r}
#| label: setup
#| output: false

source(fs::path(DMAIN, "R", "taxrules_and_forecast_functions.R"))

# a <- str2expression("5 < 10")
# eval(a)

```

```{r}
#| label: get-data
#| output: false

pmtdb <- readRDS(fs::path(PDINTERMEDIATE, "pmtdb_calibrated.rds"))
glimpse(pmtdb)
summary(pmtdb)

```

Quick checks

```{r}

df <- readRDS(fs::path(PDINTERMEDIATE, "qcewmta.rds"))
count(df, area)

df |> 
  filter(ownerf==1, naics=="00") |> 
  summarise(payroll = sum(payroll)) |> 
  mutate(tax1bp=.0001 * payroll)

```

```{r}
#| label: problem-setup
#| output: false

# prob$emp_growth <- 0
# prob$avg_wagerate_growth <- 0

```

### Tax at 2024 levels

```{r}
#| label: tax-calc1
#| output: false

plan2024 <- make_taxplan("tax2024")

prob <- list()
prob$year <- 2024
prob$emp_growth <- .0
prob$avg_wagerate_growth <- .0
prob$plan1 <- plan2024
prob$plan2 <- plan2024

prob

pmtfc <- pmtdb_forecast(prob, pmtdb)
summary(pmtfc)

check <- pmtfc |> 
    mutate(calc_tax(pick(everything()), prob$plan1))

# sum(check$tax) # 2,945,979,702 # at 2024 levels
check |> 
  summarise(tax=sum(tax), .by=c(year, owner, ownerf)) |> 
  adorn_totals()


check |> 
  filter(gpay_firm > 10e6) |> 
  summarise(tax=sum(tax), .by=c(year, owner, ownerf)) |> 
  adorn_totals()

 #              owner ownerf        tax
 #            Private      1 2694159429
 # Federal Government      2          0
 #   State Government      3   46345527
 #   Local Government      4  205474746
 #              Total     10 2945979702

# wage tax target from calibration
# wagetax2024_target <- 2.946 * 1e9 # pulled from data.ny.gov 3/31/2025
#  2,946,047 
# my uncalibrated 2024 number is $3,172, which is $226 million or 7.7% higher
```

### 1 bp Tax at 2024 levels

```{r}
#| label: tax-calc2
#| output: false

plan1bp <- make_taxplan("tax1bp",
             lower_nyc = c(0, 1.5e6, 1.75e6, 10e6),
             rates_nyc = c(0.0001, 0.0001, 0.0001, 0.0001),
             lower_burbs = c(0, 1.5e6, 1.75e6, 10e6),
             rates_burbs = c(0.0001, 0.0001, 0.0001, 0.0001),
             description = "Tax at 1 bp")

prob <- list()
prob$year <- 2024
prob$emp_growth <- .0
prob$avg_wagerate_growth <- .0
prob$plan1 <- plan1bp
prob$plan2 <- plan1bp

prob

pmtfc <- pmtdb_forecast(prob, pmtdb)
summary(pmtfc)

check <- pmtfc |> 
    mutate(calc_tax(pick(everything()), prob$plan1))

check |> 
  summarise(tax=sum(tax), .by=c(owner, ownerf)) |> 
  adorn_totals()

check |> 
  filter(gpay_firm > 10e6) |> 
  summarise(tax=sum(tax), .by=c(owner, ownerf)) |> 
  adorn_totals()

 #              owner ownerf      tax
 #            Private      1 49717666
 # Federal Government      2        0
 #   State Government      3  1001862
 #   Local Government      4  3760685
 #              Total     10 54480213


```

### Tax at 2023 levels

```{r}
#| label: tax-calc3
#| output: false

plan2024 <- make_taxplan("tax2024")

prob <- list()
prob$year <- 2024
prob$emp_growth <- -.018
prob$avg_wagerate_growth <- -.038
prob$plan1 <- plan2024
prob$plan2 <- plan2024

prob

pmtfc <- pmtdb_forecast(prob, pmtdb)
summary(pmtfc)

check <- pmtfc |> 
    mutate(calc_tax(pick(everything()), prob$plan1))

# sum(check$tax) # 2,945,979,702 # at 2024 levels
check |> 
  summarise(tax=sum(tax), .by=c(year, owner, ownerf)) |> 
  adorn_totals()

 #  year              owner ownerf        tax
 #  2024            Private      1 2537015158
 #  2024 Federal Government      2          0
 #  2024   State Government      3   43663357
 #  2024   Local Government      4  194108705
 # Total                  -     10 2774787221


check |> 
  filter(gpay_firm > 10e6) |> 
  summarise(tax=sum(tax), .by=c(year, owner, ownerf)) |> 
  adorn_totals()

 #  year              owner ownerf        tax
 #  2024            Private      1 2077135933
 #  2024 Federal Government      2          0
 #  2024   State Government      3   27283543
 #  2024   Local Government      4  111344718
 # Total                  -     10 2215764193

# wage tax target from calibration
# wagetax2024_target <- 2.946 * 1e9 # pulled from data.ny.gov 3/31/2025
#  2,946,047 
# my uncalibrated 2024 number is $3,172, which is $226 million or 7.7% higher
```

### 1 bp Tax at 2023 levels

```{r}
#| label: tax-calc4
#| output: false

# back out my 2023 to 2024 assumptions:
#   Employment growth: 1.8%
# Growth in wages per employees: 3.8%
# gpayroll * (1 + prob$avg_wagerate_growth) * (1 + prob$emp_growth)) 

plan1bp <- make_taxplan("tax1bp",
             lower_nyc = c(0, 1.5e6, 1.75e6, 10e6),
             rates_nyc = c(0.0001, 0.0001, 0.0001, 0.0001),
             lower_burbs = c(0, 1.5e6, 1.75e6, 10e6),
             rates_burbs = c(0.0001, 0.0001, 0.0001, 0.0001),
             description = "Tax at 1 bp")

prob <- list()
prob$year <- 2023
prob$emp_growth <- -.018
prob$avg_wagerate_growth <- -.038
prob$plan1 <- plan1bp
prob$plan2 <- plan1bp

prob

pmtfc <- pmtdb_forecast(prob, pmtdb)
summary(pmtfc)

check <- pmtfc |> 
    mutate(calc_tax(pick(everything()), prob$plan1))

# 1 bp at 2023 levels
check |> 
  summarise(tax=sum(tax), .by=c(owner, ownerf)) |> 
  adorn_totals()

 #              owner ownerf      tax
 #            Private      1 49717666
 # Federal Government      2        0
 #   State Government      3  1001862
 #   Local Government      4  3760685
 #              Total     10 54480213

# 1 bp at 2023 levels

check |> 
  filter(gpay_firm > 10e6) |> 
  summarise(tax=sum(tax), .by=c(owner, ownerf)) |> 
  adorn_totals()

 #              owner ownerf        tax
 #            Private      1 37122512.5
 # Federal Government      2        0.0
 #   State Government      3   547776.7
 #   Local Government      4  2038493.1
 #              Total     10 39708782.3

```

## DOB option

Changes private

```{r}

make_taxplan2 <- function(shortname = NULL, 
                         lower_nyc = NULL,
                         rates_nyc = NULL, 
                         lower_burbs = NULL, 
                         rates_burbs = NULL, 
                         exempt = NULL,
                         excluded = NULL,
                         low_pay = NULL,
                         description = NULL){
  taxplan <- tax2024
  if(shortname == "tax2024") return(tax2024)
  
  taxplan$shortname <- shortname
  taxplan$description <- ifelse(is.null(description), shortname, description)
  
  if(!is.null(exempt)) taxplan$exempt <- expression(exempt)
  # if(!is.null(excluded)) taxplan$excluded <- expression(excluded)
  if (!is.null(excluded)) {
  taxplan$excluded <- parse(text = excluded)  # Converts string to expression
}
  if(!is.null(low_pay)) taxplan$low_pay <- expression(low_pay)
  
  if(!is.null(rates_nyc)){
    nyc <- tibble(nyc=rep(TRUE, length(rates_nyc)),
                  lower = lower_nyc,
                  rate = rates_nyc)|> 
      mutate(upper = lead(lower, default = Inf))
    taxplan$rates <- taxplan$rates |> 
      filter(!nyc) |> 
      bind_rows(nyc)
  }
  
  if(!is.null(rates_burbs)){
    burbs <- tibble(nyc=rep(FALSE, length(rates_burbs)),
                    lower = lower_burbs,
                    rate = rates_burbs)|> 
      mutate(upper = lead(lower, default = Inf))
    taxplan$rates <- taxplan$rates |> 
      filter(nyc) |> 
      bind_rows(burbs)
  }  
  
  return(taxplan)
}

xcl <- '(naics %in% c("491", "814")) | ((ownerf %in% 3:4) & !nyc)'

make_taxplan2(shortname="test")
make_taxplan2(shortname="test",
              excluded = xcl)


```

## NEW approach here

```{r}
#| label: tax-plans

make_taxplan("tax2024")

rates1 <- read_excel(fs::path(DMAIN, "taxplans", "taxplans.xlsx"), skip=2)
rates <- rates1 |> 
  filter(!is.na(ownerf)) |> 
  pivot_longer(-c(ownerf, owner_short, nyc, lower, upper),
               names_to = "shortname",
               values_to = "rate")
rates
count(rates, shortname, rate)

exempt <- expression(
  owner == "Federal Government" |
    (owner == "Local Government") & naics=="6111")

excluded <- expression(naics %in% c("491", "814"))
low_pay <- expression(gpay_firm < 1.25e6)


prob <- list()
prob$year <- 2025
prob$rates <- rates
prob$exempt <- exempt
prob$excluded <- excluded
prob$low_pay <- low_pay

# DOB's 4.1% wage growth
prob$emp_growth <- .01
prob$avg_wagerate_growth <- .031
# Kevin Willen's growth rates
# prob$emp_growth <- .01
# prob$avg_wagerate_growth <- .0185


pmtfc <- pmtdb_forecast(prob, pmtdb)
summary(pmtfc)

prob$rates

df <- pmtfc |>
    mutate(
      exempt = eval(prob$exempt),
      excluded = eval(prob$excluded),
      low_pay = eval(prob$low_pay),
      gpay_firm = ifelse(gpay_firm == 0, 1e-12, gpay_firm)) |> 
    left_join(prob$rates, 
              by = join_by(ownerf, nyc, gpay_firm > lower, gpay_firm <= upper)) |> 
    select(-lower, -upper) |> 
    mutate(rate = ifelse(exempt | excluded | low_pay,
                         0,
                         rate),
           tax = rate * gpayroll)
  

glimpse(df)
count(df, rate)
df |> 
  summarise(tax = sum(tax), .by=shortname) |> 
  gt()


```

```{r}

calc_tax <- function(data, taxplan){
  df <- data |>
    mutate(
      shortname = taxplan$shortname,
      exempt = eval(taxplan$exempt),
      excluded = eval(taxplan$excluded),
      low_pay = eval(taxplan$low_pay)) |> 
    left_join(taxplan$rates, 
              by = join_by(nyc, gpay_firm > lower, gpay_firm <= upper)) |> 
    select(-lower, -upper) |> 
    mutate(rate = ifelse(exempt | excluded | low_pay,
                         0,
                         rate),
           tax = rate * gpayroll)
  
  return(df)
}


```

```{r}
#| label: key-option


plannow <- make_taxplan2("now",
             lower_nyc = c(0, 1.5e6, 1.75e6, 10e6),
             rates_nyc = c(0.0011, 0.0023, 0.006, 0.006),
             lower_burbs = c(0, 1.5e6, 1.75e6, 10e6),
             rates_burbs = c(0.0011, 0.0023, 0.0034, 0.0034),
             description = "tax now")


xcl <- '(naics %in% c("491", "814")) | ((ownerf %in% 3:4) & !nyc)'
plandob <- make_taxplan2("dob2025",
             lower_nyc = c(0, 1.5e6, 1.75e6, 10e6),
             rates_nyc = c(0.00055, 0.00115, 0.006, 0.00895),
             lower_burbs = c(0, 1.5e6, 1.75e6, 10e6),
             rates_burbs = c(0.00055, 0.00115, 0.0034, 0.00635),
             excluded = xcl,
             description = "DOB 2025-04-28 plan DOB growth")

plannow$rates |>
  left_join(plandob$rates |> rename(ratenew=rate),
            by = join_by(nyc, lower, upper)) |> 
  mutate(change = ratenew - rate)

prob <- list()
prob$year <- 2025
prob$emp_growth <- .01
prob$avg_wagerate_growth <- .031 # gives 4.1% wage growth
prob$plan1 <- plannow
prob$plan2 <- plandob

prob

pmtfc <- pmtdb_forecast(prob, pmtdb)
summary(pmtfc)


taxcomp <- bind_rows(
  pmtfc |> 
    mutate(calc_tax(pick(everything()), prob$plan1)) |> 
    mutate(basealt = "basetax"),
  pmtfc |> 
    mutate(calc_tax(pick(everything()), prob$plan2)) |> 
    mutate(basealt = "alttax"))

glimpse(taxcomp)
count(taxcomp, shortname)

taxcomp |> 
  summarise(tax=sum(tax),
            .by=c(ownerf, owner, basealt)) |> 
  pivot_wider(names_from = basealt,
              values_from = tax) |> 
  adorn_totals() |> 
  mutate(diff = alttax - basetax)




```

## NOT UPDATED BELOW HERE

```{r}
#| label: show-dob-results
#| output: true

tabdata <- taxcomp |> 
  summarise(gpayroll = sum(gpayroll),
            tax=sum(tax),
            .by=c(ownerf, owner, basealt)) |> 
  pivot_wider(names_from = basealt,
              values_from = tax) |> 
  select(ownerf, owner, gpayroll, basetax, alttax) |> 
  arrange(ownerf) |> 
  adorn_totals() |> 
  mutate(change = alttax - basetax)

tabdata |> 
  gt() |> 
  tab_header(md("50bp PMT increase for **firms** with payroll > $10m, NYC+Suburbs combined"),
             subtitle="$ millions, 2025 levels") |> 
  fmt_number(columns = -c(ownerf, owner),
             scale = 1e-6,
             decimals = 0) |> 
  fmt_currency(columns = -c(ownerf, owner),
               rows = c(1, nrow(tabdata)),
               scale = 1e-6,
               decimals = 0)

```

### Results broken down by NYC and suburbs

```{r}
#| label: show-dob-geographic-details
#| output: true

tabdata <- taxcomp |> 
  summarise(tax=sum(tax),
            .by=c(nyc, ownerf, owner, basealt)) |> 
  mutate(nyc=ifelse(nyc, "nyc", "suburbs")) |> 
  pivot_wider(names_from = basealt,
              values_from = tax) |> 
  mutate(change = alttax - basetax) |> 
  pivot_wider(names_from = nyc,
              values_from = c(basetax, alttax, change)) |> 
  arrange(ownerf) |> 
  adorn_totals() |> 
  mutate(base_total = basetax_nyc + basetax_suburbs,
         alt_total = alttax_nyc + alttax_suburbs,
         change_total = change_nyc + change_suburbs,
         nyc_change_pct=change_nyc / change_total) |> 
  relocate(base_total, .after = basetax_suburbs) |> 
  relocate(alt_total, .after = alttax_suburbs)
# tabdata

tabdata |> 
  gt() |> 
  tab_header(md("50bp PMT increase for **firms** with payroll > $10m"),
             subtitle="$ millions, 2025 levels") |> 
  fmt_number(columns = -c(ownerf, owner,nyc_change_pct),
             scale = 1e-6,
             decimals = 0) |> 
  fmt_currency(columns = -c(ownerf, owner,nyc_change_pct),
               rows = c(1, nrow(tabdata)),
               scale = 1e-6,
               decimals = 0) |> 
  fmt_percent(columns=nyc_change_pct,
              decimals = 1) |> 
  sub_missing(missing_text = "--")

```

### Plan 1 (2024 law) and Plan 2 (DOB option) details

```{r}
#| label: show-plans
#| output: true

prob

```

```{r}
#| label: cleanup
rm(list = ls())
```

```{r stop_here, echo=FALSE}
knitr::knit_exit()
```
