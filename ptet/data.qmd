---
editor_options:
  chunk_output_type: console
---

# Estimating the PTET and PTET credit

The Tax Department publishes almost no data on the Pass-Through Entity Tax. However, we have important inferential information:

-   The Tax Department reports total tax credits by income range and county by year from 2015=2022; it does not report individual tax credits. Total credits include credits that lower- and middle-income taxpayers claim such as the earned income credit and the child care credit, as well as the PTET credit, which is likely be claimed almost exclusively by very high income taxpayers.
-   Total tax credits fluctuated around \$5 billion from 2015-2020, then shot up dramatically in 2021 (the first year of the PTET and PTET credit), as shown in the first table below.

```{r}
#| label: setup
#| output: false

library(tidyverse)
library(readxl)
library(vroom)
library(fs)
library(btools)
library(bggtools)
library(gt)

source(here::here("R", "constants.r"))

tprint <- 75  # default tibble print
options(tibble.print_max = tprint, tibble.print_min = tprint) # show up to tprint rows

ddir <- here::here("data")

```

```{r}
#| label: notes

# pit1 no agi ranges ----
# pit2 15 ranges, top $1m+; counties ----
# pit3 27 ranges, top $10m+; statewide ----
# pit4 8 income ranges, top $200k+; counties ----
# 
# 13,031.2 SFY 2026 Tax Expenditure Report estimate of the 2022 PTET credit.


```

```{r}
#| label: get-dtf-pit-data
#| output: false
#| eval: false

# Get and save PIT data.

# Personal Income Tax Filers, Files Beginning Tax Year 2015, Summary Datasets
# Dataset 1 - Major Items by Liability Status and Place of Residence
# Dataset 2 - Major Items and Income & Deduction Components by Place of Residence and Broad Income Range
# Dataset 3 - Statewide Major Items and Income & Deduction Components by Liability Status and Detail Income Range
# Dataset 4 - County-level Major Items and Income & Deduction Components by Wide Income Range

# pick numeric part of url from the bar at top of browser
url1 <- "https://data.ny.gov/api/views/73iw-kuxv/rows.csv?accessType=DOWNLOAD&sorting=true"
url2 <- "https://data.ny.gov/api/views/f3t7-zvbx/rows.csv?accessType=DOWNLOAD&sorting=true"
url3 <- "https://data.ny.gov/api/views/rt8x-r6c8/rows.csv?accessType=DOWNLOAD&sorting=true"
url4 <- "https://data.ny.gov/api/views/qjqv-zrwt/rows.csv?accessType=DOWNLOAD&sorting=true"

pit1 <- vroom(url1) # counties; NO AGI RANGES; agi & liability, no partnership income, no credits
pit2 <- vroom(url2) # counties; has Gain and loss from Rent,Royalties,Prtnrshp,Estates,Trusts Income BUT NOT #s
pit3 <- vroom(url3) # statewide; Gain and loss from Rent,Royalties,Prtnrshp,Estates,Trusts Income AND #s
pit4 <- vroom(url4) # counties; Gain and loss from Rent,Royalties,Prtnrshp,Estates,Trusts Income AND #s, WIDE income ranges

glimpse(pit1) # no agi ranges
glimpse(pit2) # 15 ranges, top $1m+; counties
glimpse(pit3) # 27 ranges, top $10m+; statewide
glimpse(pit4) # 8 income ranges, top $200k+; counties

count(pit2, rnum=`Sort on Income Range`, range=`NY Adjusted Gross Income Range (Fed.Col)`)
count(pit3, rnum=`Sort on Income Range`, range=`NY Adjusted Gross Income Range (Fed.Col)`)
count(pit4, rnum=`Sort on Income Range`, range=`NY Adjusted Gross Income Range (Fed.Col)`)


# pit1 has no y, restype, por, ...
saveRDS(pit1, fs::path(ddir, "pit1.rds"))

# pit2 has mid y, restype, por, rrpet gain & loss, tax credits, other NYadds, taxes paid
saveRDS(pit2, fs::path(ddir, "pit2.rds")) 

# pit3 has fine y, restype, tax creds, rrpet gain loss
saveRDS(pit3, fs::path(ddir, "pit3.rds")) 

# pit4 has broad y, restype, por, 
saveRDS(pit4, fs::path(ddir, "pit4.rds"))

```

## Statewide tax credits over time

The table below shows the massive increase in tax credits in 2021 and 2022, especially in the upper income ranges. This suggests strongly that the PTET credit was driving the increase.

```{r}
#| label: prepare-credits
#| eval: true
#| output: false

pit3 <- readRDS(fs::path(ddir, "pit3.rds")) 
glimpse(pit3)
cbind(1:ncol(pit3), names(pit3))

pit31 <- pit3 |> 
  select(taxyear=1, taxstatus=2, restype=3, nyagirange=4, notes=5, nret=6, 
         nysource=12, ti=21, taxbc=22, credits=23, taxac=24, 
         nrrpetgain=35, rrpetgain=36,
         nrrpetloss=37, rrpetloss=38, othernyadds=57)

agiranges <-pit31 |> 
  filter(taxyear==2022, taxstatus=="All Returns", restype=="All Filers") |> 
  mutate(rangenum=row_number()) |> 
  select(rangenum, nyagirange)


# now collapse for more readable results ----
pit32c <- pit31 |>
  filter(taxstatus=="All Returns") |> 
  left_join(agiranges, by = join_by(nyagirange)) |> 
  mutate(rangenum = ifelse(rangenum < 18, 0, rangenum),
         nyagirange = ifelse(rangenum==0, "< $100,000", nyagirange)) |> 
  summarise(credits=sum(credits),
            .by=c(restype, rangenum, nyagirange, taxyear)) |> 
  pivot_wider(names_from = taxyear, values_from = credits, names_prefix = "y") |> 
  select(restype, rangenum, nyagirange, y2015:y2022) |> 
  arrange(restype, rangenum)



```

```{r}
#| label: show-credits
#| eval: true
#| output: true

tab3_note <- md("[NY Department of Taxation and Finance Dataset 3](https://data.ny.gov/Government-Finance/Personal-Income-Tax-Filers-Summary-Dataset-3-State/rt8x-r6c8/about_data)")

pit32c |> 
  filter(restype=="All Filers") |> 
  select(rangenum, nyagirange, y2015:y2022) |> 
  mutate(c2022=y2022 - y2020) |> 
  select(-rangenum) |> 
  gt() |> 
  tab_header(title = "NY Personal income tax credits by tax year ($ millions)",
             subtitle = "Includes taxable and non-taxable returns, residents and non-residents") |> 
  cols_label_with(columns = starts_with("y"), fn=\(x) str_remove(x, "y")) |> 
  cols_label(c2022 = md("2022<br>minus<br>2020")) |> 
  fmt_number(-c(nyagirange),
             scale=1e-6,
             decimals = 0) |> 
  tab_source_note(tab3_note)

```

## Estimating the PTET credit

I take a simple approach, working with county-level data:

-   Construct "base" non-PTET credits as the 3-year average of total credits between 2017 and 2019
-   Assume total PTET credits in 2022 equal the Tax Department's estimate of \$13.031 billion from the [SFY 2025-26 Tax Expenditure Report](https://www.tax.ny.gov/pdf/research/stats/expenditure-reports/fy26ter.pdf).
-   Calculate total non-PTET credits in 2022 as reported total credits in 2022 minus the \$13.031 billion estimated PTET credit amount.
-   Estimate detailed non-PTET credits in 2022 (by county, income range, residency, and filing status)
-   Estimate detailed PTET credits in 2022 as total credits minus estimated detailed non-PTET credits.

```{r}
#| label: ptet-setup

ptet2022 <- 13031.2 * 1e6

nyccos <- c("Bronx", "Kings", "Manhattan", "Queens", "Richmond")
mtasubs <- c("Nassau", "Suffolk", "Dutchess", "Orange", "Putnam", "Rockland", "Westchester")

```

```{r}
#| label: estimate-ptet-credit

pit2 <- readRDS(fs::path(ddir, "pit2.rds")) 
glimpse(pit2)
cbind(1:ncol(pit2), names(pit2))


pit2a <- pit2 |> 
  select(taxyear=1, 
         placesort=54, restype=2, por=3, county=4, state=5, country=6,
         rangenum=55, nyagirange=7, credits=19)
count(pit2a, restype)
count(pit2a, por)

# figure out what records to keep
tmp <- count(pit2a, placesort, restype, por, county, state, country)

pit2b <- pit2a |> 
  mutate(nyc = placesort==6,
         mtasub = county %in% mtasubs,
         nyrestot = placesort == 99,
         nonrespart = placesort %in% c(399, 499),
         allfilers = placesort == 699) |> 
  filter(nyc | mtasub | nyrestot | nonrespart | allfilers) |> 
  mutate(county = ifelse(county =="All New York City", "New York City", county))

atoms <- pit2a |> 
  mutate(nyc = placesort==6,
         mtasub = county %in% mtasubs,
         rony = placesort %in% 7:67 &
           !county %in% mtasubs,
         nonrespart = placesort %in% c(399, 499),
         allfilers = placesort == 699) |> 
  filter(nyc | mtasub | rony | nonrespart | allfilers) |> 
  mutate(county = case_when(
    county =="All New York City" ~ "New York City",
    nonrespart ~ "Nonresident / part-year",
    rony ~ "Rest of New York",
    .default = county))

atoms |> 
  filter(rangenum==16, taxyear==2022) |> 
  summarise(credits=sum(credits), .by=allfilers)

atoms |> 
  filter(rangenum!=16, taxyear==2022) |> 
  summarise(credits=sum(credits), .by=allfilers)

atoms2 <- atoms |> 
  # drop totals, keep good years
  filter(rangenum!=16, 
         taxyear %in% c(2018:2020, 2022),
         !allfilers)

atoms2 |> 
  summarise(credits=sum(credits), .by=taxyear)
glimpse(atoms2)

atoms3 <- atoms2 |> 
  summarise(credits=sum(credits), .by=c(taxyear, nonrespart, rony, nyc, mtasub, county, rangenum, nyagirange))

ptetcr1 <- atoms3 |> 
  select(taxyear, nonrespart, rony, nyc, mtasub, county, rangenum, nyagirange, credits) |> 
  arrange(taxyear) |> 
  pivot_wider(names_from = taxyear, values_from = credits, names_prefix = "y") |> 
  rename(credits = y2022) |> 
  mutate(base=pmean(y2018, y2019, y2020),
         ptet1 = pmax(credits - base, 0))

summary(ptetcr1)
sum(ptetcr1$ptet1)

ptetcr2 <- ptetcr1 |> 
  mutate(ptet = ptet1 * ptet2022 / sum(ptet1),
         nonptet = credits - ptet)
sum(ptetcr2$ptet)
summary(ptetcr2)

ptetcr3 <- ptetcr2 |> 
  select(nonrespart, rony, nyc, mtasub, county, rangenum, nyagirange, nonptet, ptet, credits)

```

```{r}
#| label: collapse
#| output: false

# collapse the ptet data and add in geographic subtotals

glimpse(ptetcr3)

mtasubtot <- ptetcr3 |> 
  filter(mtasub) |> 
  summarise(ptet = sum(ptet),
            .by=c(rangenum, nyagirange)) |> 
  mutate(mtasubtot=TRUE, county="MTA suburbs")

mtatot <- ptetcr3 |> 
  filter(mtasub | nyc) |> 
  summarise(ptet = sum(ptet),
            .by=c(rangenum, nyagirange)) |> 
  mutate(mtatot=TRUE, county="MTA total")

nyrestot <- ptetcr3 |> 
  filter(mtasub | nyc | rony) |> 
  summarise(ptet = sum(ptet),
            .by=c(rangenum, nyagirange)) |> 
  mutate(nyrestot=TRUE, county="NYS resident total")

allfilers <- ptetcr3 |> 
  summarise(ptet = sum(ptet),
            .by=c(rangenum, nyagirange)) |> 
  mutate(allfilers=TRUE, county="All filers (residents + nonresidents)")

ptetcr4 <-
  bind_rows(ptetcr3,
            mtasubtot,
            mtatot,
            nyrestot,
            allfilers) |> 
  mutate(across(where(is.logical), \(x) replace_na(x, FALSE))) |> 
  relocate(mtasubtot, mtatot, nyrestot, allfilers)
names(ptetcr4)

# get all-incomes totals
inctot <- ptetcr4 |> 
  summarise(ptet = sum(ptet),
            .by=c(allfilers, nonrespart, nyrestot, rony, mtatot, mtasubtot, mtasub, nyc, county)) |> 
  mutate(rangenum=16, nyagirange="All incomes total")


ptetfinal <- bind_rows(ptetcr4, inctot) |> 
  mutate(across(where(is.logical), \(x) replace_na(x, FALSE))) |> 
  arrange(desc(nyc), desc(mtasubtot), desc(mtatot), desc(rony), desc(nyrestot), desc(nonrespart), desc(allfilers)) |> 
  select(-nonptet, -credits)
 

```

## Excel -- Downloadable data for PTET estimates

```{r}
#| eval: true

openxlsx::write.xlsx(ptetfinal, file=fs::path("ptet", "for_mta", "ptet_credit_estimates_by_county_and_income_range_2022.xlsx"))

```

[Download Excel File -- PTET credit estimates by county and income range, 2022](for_mta/ptet_credit_estimates_by_county_and_income_range_2022.xlsx)

## Estimated PTET credit by summarized geographies, selected income ranges

```{r}
#| output: true

tabdata <- ptetfinal |> 
  filter(allfilers | nonrespart | nyrestot | nyc | mtasubtot | mtatot | rony) |> 
  filter(rangenum %in% 13:16) |> 
  select(-nyagirange) |> 
  pivot_wider(names_from = rangenum, names_prefix = "r", values_from = ptet) |> 
  arrange(desc(nyc), desc(mtasubtot), desc(mtatot), desc(rony), desc(nyrestot), desc(nonrespart), desc(allfilers)) |> 
  mutate(pct=r16 / r16[allfilers])

tab <- tabdata |> 
  select(county, r13:r16, pct) |>
  gt() |> 
  tab_header("Estimated New York PTET credit in tax year 2022, $ millions",
             subtitle="AGI ranges >= $250k") |> 
  cols_label(county="Area",
             r13="$250,000 - 499,999",
             r14="$500,000 - 999,999",
             r15="$1,000,000 and Over",
             r16="Total",
             pct="% share of total") |> 
  fmt_number(columns = r13:r16,
             scale=1e-6,
             decimals = 0) |> 
  fmt_currency(columns = r13:r16,
               rows=c(1, nrow(tabdata)),
               scale=1e-6,
               decimals = 0) |> 
  fmt_percent(columns = pct,
              decimals = 1) |> 
  tab_source_note("Calculation: Total tax credits in 2022 minus 2018-2020 average credits, calibrated to 2025-26 Tax Expenditure Report estimate of $13 billion")

# tab

tab |> 
  # tab_style(
  #   style = cell_fill(color = "grey96"),
  #   locations = cells_body(rows = c(3, 5))) |> 
  tab_style(
    style = cell_fill(color = "#F0F8FF"),
    locations = cells_body(rows = c(7)))

```

## Estimated PTET credit by county in MTA region, selected income ranges

```{r}
#| output: true

tabdata <- ptetfinal |> 
  filter(allfilers | nonrespart | nyrestot | nyc | mtasub | mtasubtot | mtatot | rony) |> 
  filter(rangenum %in% 13:16) |> 
  select(-nyagirange) |> 
  pivot_wider(names_from = rangenum, names_prefix = "r", values_from = ptet) |>
  arrange(desc(nyc), desc(mtasub), desc(mtasubtot), desc(mtatot), desc(rony), desc(nyrestot), desc(nonrespart), desc(allfilers)) |> 
  mutate(pct=r16 / r16[allfilers])

tab <- tabdata |> 
  select(county, r13:r16, pct) |>
  gt() |> 
  tab_header("Estimated New York PTET credit in tax year 2022, $ millions",
             subtitle="AGI ranges >= $250k") |> 
  cols_label(county="Area",
             r13="$250,000 - 499,999",
             r14="$500,000 - 999,999",
             r15="$1,000,000 and Over",
             r16="Total",
             pct="% share of total") |> 
  fmt_number(columns = r13:r16,
             scale=1e-6,
             decimals = 0) |> 
  fmt_currency(columns = r13:r16,
               rows=c(1, nrow(tabdata)),
               scale=1e-6,
               decimals = 0) |> 
  fmt_percent(columns = pct,
              decimals = 1) |> 
  tab_source_note("Calculation: Total tax credits in 2022 minus 2018-2020 average credits, calibrated to 2025-26 Tax Expenditure Report estimate of $13 billion")

# tab

tab |> 
  tab_style(
    style = cell_fill(color = "grey96"),
    locations = cells_body(rows = c(9, 10, 12))) |> 
  tab_style(
    style = cell_fill(color = "#F0F8FF"),
    locations = cells_body(rows = c(14)))

```

```{r stop_here, echo=FALSE}
knitr::knit_exit()
```
