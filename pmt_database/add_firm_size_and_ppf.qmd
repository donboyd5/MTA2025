---
output: html_document
editor_options: 
  chunk_output_type: console
---

{{< include _setup.qmd >}}

# Allocate QCEW data to private establishment size groups

```{r}
#| label: get-data

# pmtdb1 <- readRDS(fs::path(PDINTERMEDIATE, "test.rds"))
pmtdb1 <- readRDS(fs::path(PDINTERMEDIATE, "qcew_allocated.rds"))
susb <- readRDS(fs::path(PDINTERMEDIATE, "susb2021_mta.rds"))

```

```{r}
#| label: map-firm-sizes-to-estab-sizes-by-industry

# fpe stands for firms per establishment

glimpse(susb)

fpe <- susb |> 
  select(area, snaics, stitle, firmsize, sfirms, sestabs, semp) |> 
  mutate(fpe=sfirms / sestabs,
         esize=semp / sestabs, 
         fsize=semp / sfirms,
         ratio = fsize / esize)

inds <- fpe |> 
  filter(firmsize=="1: Total") |> 
  summarise(across(c(sfirms, sestabs, semp), sum),
            .by=c(snaics, stitle))

# create fpe values to save ----
fpegroups <- fpe |> 
  filter(nchar(snaics)==2) |> 
  mutate(esgroup = ntile(esize, 4), # divide the records into 4 groups for each industry
         .by=c(snaics, stitle)) |> 
  select(snaics, stitle, esgroup, esize, fpe) |> 
  summarise(
    esmin=min(esize),
    esmax=max(esize),
    fpemin=min(fpe),
    fpemdn=median(fpe),
    fpemax=max(fpe),
    .by=c(esgroup, snaics, stitle)) |> 
  arrange(snaics, esgroup) |> 
  mutate(lowcut=case_when(esgroup==1 ~ 0,
                       esgroup > 1 ~ pmean(esmin, lag(esmax)),
                       .default = 0),
         hicut = case_when(esgroup==4 ~ 1,
                           esgroup < 4 ~ pmean(esmax, lead(esmin)),
                           .default = Inf))
fpegroups

```

## Get firm-establishment ratios corresponding to industry and size of establishment

```{r}
#| label: match


lookup <- fpegroups |>
  mutate(naics2=snaics) |> 
  arrange(snaics, esgroup)


f <- function(naics2, es){
  val <- lookup |> 
    filter(naics2==!!naics2) |> 
    filter(!!es >= lowcut, !!es <= hicut) |>
    select(lowcut, hicut, fpemdn) |> 
    mutate(naics2=!!naics2, es=!!es)
  return(val$fpemdn)
}

# speed this up !!!! ----
pmtdb2 <- pmtdb1 |> 
  select(-res) |> 
  mutate(naics2=str_sub(naics, 1, 2)) |> 
  rowwise() |>
  mutate(fpe=list(f(naics2, gestabs))) |> 
  ungroup() |> 
   mutate(fpe=as.numeric(fpe),
          fpe=ifelse(is.na(fpe), 1, fpe))
summary(pmtdb2)
pmtdb2

saveRDS(pmtdb2, fs::path(PDINTERMEDIATE, "pmtdb_fpe.rds"))

```

```{r}
#| label: cleanup
rm(list = ls())
```

```{r stop_here, echo=FALSE}
knitr::knit_exit()
```

```{r}
#| label: older-test-code

A <- pmtdb1 |> 
  filter(area=="Bronx County", naics=="622") |> 
  select(naics, esize_avgemp) |> 
  mutate(naics2=str_sub(naics, 1, 2))
A

B <- fpegroups |>
  mutate(naics2=snaics)

# B |> filter(naics2 %in% "62")

result <- A  |> 
  left_join(B, by = "naics2", relationship = "many-to-many") |> 
  filter(esize_avgemp >= lowcut & esize_avgemp < hicut) |> 
  select(names(A), fpemdn)
result


library(fuzzyjoin)

result <- A %>%
  fuzzy_left_join(
    B,
    by = c("industry" = "industry", "firm size" = "fslow", "firm size" = "fshi"),
    match_fun = list(`==`, `>=`, `<`)
  ) %>%
  select(names(A), ratio)



df <- tibble(naics2=c("22", "22"), es=c(20, 70))


f <- function(naics2, es){
  lookup |> 
    filter(naics2==!!naics2) |> 
    filter(!!es >= lowcut, !!es <= hicut) |>
    select(fpemdn)
}

df |> 
  rowwise() |> 
  mutate(fpemdn=f(naics2, es))

f(df$naics2, df$es)


matches <- pmtdb1 |> 
  select(-res) |> 
  mutate(naics2=str_sub(naics, 1, 2)) |> 
  left_join(lookup,
            by = join_by(naics2),
            relationship = "many-to-many") |> 
  filter(!is.na(fpemdn)) |> 
  mutate(match = (esize_estabsadj) >= (lowcut & esize_estabsadj < hicut))
  # mutate(lowcut = ifelse(is.na(lowcut), -Inf, lowcut),
  #        hicut = ifelse(is.na(hicut), Inf, hicut),
  #        fpemdn=ifelse(is.na(fpemdn), 1, fpemdn)) |> 
  # filter(esize_estabsadj >= lowcut, esize_estabsadj < hicut)
glimpse(pmtdb2)
sum(matches$match, na.rm=TRUE) # 11072 matches but 7848 records
summary(pmtdb2)


```
