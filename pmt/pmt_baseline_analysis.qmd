---
output: html_document
editor_options: 
  chunk_output_type: console
---

# PMT baseline analysis

```{r}
#| label: setup

suppressPackageStartupMessages(source(here::here("R", "libraries.r")))
suppressPackageStartupMessages(source(here::here("R", "libraries_ts.r")))

source(here::here("R", "constants.r"))
source(here::here("R", "functions.r"))
source(here::here("pmt", "pmt_constants_and_functions.r"))

# GLOBAL OPTIONS:
#  eval: true
#  output: false
#  echo: false

```

```{r}
#| label: prepare-pmt-data
#| output: false

pmtbl <- readRDS(fs::path(PDINTERMEDIATE, "pmt2024_baseline.rds"))
glimpse(pmtbl)
count(pmtbl, status)

# define payroll cuts and labels
(payroll_cuts <- c(0, 500e3, seq(1e6, 2e6, 200e3), seq(2e6, 5e6, 1e6), Inf, 1.25e6, 1.75e6) |> unique() |> sort())
paygroup_labels <- cutlabs(payroll_cuts)

pmtbl2 <- pmtbl |> 
  mutate(paygroup=cut(esize_payestab, payroll_cuts, right=FALSE, labels=FALSE),
         paylabel=getlabel(paygroup, paygroup_labels)) |> 
  arrange(paygroup)


```

```{r}
#| label: baseline-facts
#| output: false

tabdata <- pmtbl2 |> 
  summarise(n=n(),
            across(c(esize_estabsadj, 
                     esize_emp,
                     esize_payroll,
                     base_tax),
                   \(x) sum(x)),
                   .by=c(paygroup, paylabel)) |> 
  mutate(taxpct=base_tax / sum(base_tax)) |> 
  select(-paygroup, -n) |> 
  janitor::adorn_totals()

```

## Current Total MTA region tax by firm size

```{r}
#| label: total-tax
#| output: true

tabdata |> 
  gt() |> 
  tab_header("Estimated distribution of PMT wage tax by establishment payroll size, 2024",
             subtitle = "Private sector only. Amounts in $ millions") |> 
  cols_label(paylabel="Average establishment payroll ($)",
             esize_estabsadj="# of establishments",
             esize_emp="# of employees",
             esize_payroll="Total payroll ($m)",
             base_tax="PMT wage tax ($m)",
             taxpct="Tax as % of total") |> 
  fmt_number(columns = c(esize_estabsadj, esize_emp), decimals=0) |>
  fmt_number(columns = c(esize_payroll, base_tax), scale=1e-6, decimals=1) |>
  fmt_currency(rows=c(1, nrow(tabdata)), columns = c(esize_payroll, base_tax), scale=1e-6, decimals=1) |> 
  fmt_percent(columns = c(taxpct), decimals=1)  |> 
  tab_source_note(source_note = source_note) |> 
  tab_source_note(source_note = long_note)

```

## Current MTA region tax by firm size and NYC-suburbs

```{r}
#| label: tax-mta-suburbs
#| output: true
#| column: page

data1 <- pmtbl2 |> 
  summarise(n=n(),
            across(c(esize_estabsadj, 
                     esize_emp,
                     esize_payroll,
                     base_tax),
                   \(x) sum(x)),
                   .by=c(nyc, paygroup, paylabel))

# data1

tabdata <- data1 |> 
  select(-n, -esize_emp) |> 
  mutate(nyc=factor(nyc, levels=c(TRUE, FALSE), labels = c("NYC", "Suburbs"))) |> 
  pivot_wider(names_from=nyc, values_from = c(esize_estabsadj, esize_payroll, base_tax)) |> 
  mutate(base_total_tax=base_tax_NYC + base_tax_Suburbs) |> 
  arrange(paygroup) |> 
  select(paylabel, contains("NYC"), contains("Suburbs"), base_total_tax) |> 
  janitor::adorn_totals() |> 
  mutate(nyc_tax_share=base_tax_NYC / base_total_tax)
  
             # esize_estabsadj="# of establishments",
             # esize_emp="# of employees",
             # esize_payroll="Total payroll ($m)",
             # base_tax="PMT wage tax ($m)",
             # taxpct="Tax as % of total") |> 

tabdata |> 
  gt() |> 
  tab_header("Estimated distribution of PMT wage tax by establishment payroll size, 2024",
             subtitle = "Private sector only. Amounts in $ millions") |> 
  cols_label(paylabel="Average establishment payroll ($)",
             contains("estabsadj") ~ "# of establishments",
             contains("payroll") ~ "Total payroll ($m)",
             contains("base_tax") ~ "PMT wage tax ($m)",
             base_total_tax = "Total PMT wage tax ($m)",
             nyc_tax_share = "NYC share of tax") |> 
  tab_spanner(label="New York City", columns=contains("NYC", ignore.case = FALSE)) |> 
  tab_spanner(label="Suburbs", columns=contains("suburbs", ignore.case = TRUE)) |> 
  fmt_number(columns = contains("estabsadj"), decimals=0) |>
  fmt_number(columns = c(contains("tax"), contains("payroll")), scale = 1e-6, decimals = 1) |>
  fmt_currency(rows=c(1, nrow(tabdata)), columns = c(contains("tax"), contains("payroll")), scale=1e-6, decimals=1) |> 
  fmt_percent(columns = c(nyc_tax_share), decimals=1)  |> 
  sub_missing(missing_text = "--") |> 
  tab_source_note(source_note = source_note) |> 
  tab_source_note(source_note = long_note)

```

## Current MTA region tax by firm size and county -- Excel file

This section writes county-by-county results to an Excel file.

The columns are:

-   `area`
-   `paygroup`
-   `paylabel`
-   `esize_estabsadj` -- number of establishments in the county-payroll group
-   `esize_emp` -- number of employees in the group
-   `base_tax` -- base (current law) tax in the group at 2024 levels

Note that the file does not have totals by county or by payroll size.

```{r}
#| label: tax-mta-county
#| eval: true
#| output: true
#| column: page

data1 <- pmtbl2 |> 
  mutate(area = ifelse(nyc, "New York City", area)) |> 
  summarise(across(c(esize_estabsadj, 
                     esize_emp,
                     esize_payroll,
                     base_tax),
                   \(x) sum(x)),
                   .by=c(area, paygroup, paylabel))

openxlsx::write.xlsx(data1, file=fs::path(PDMTA, "baseline_2024tax_by_county_and_establishment_payroll.xlsx"))

```

[Download Excel File -- Baseline 2024 tax by county and payroll size](data/for_mta/baseline_2024tax_by_county_and_establishment_payroll.xlsx)
