---
output: html_document
editor_options: 
  chunk_output_type: console
---

# PMT model

```{r}
#| label: setup

source(here::here("R", "libraries.r"))
source(here::here("R", "libraries_ts.r"))
source(here::here("R", "constants.r"))
source(here::here("R", "functions.r"))

library(zip)
library(lobstr)

# GLOBAL OPTIONS: eval: true, output: false

```

## Get base 2023 data

```{r}
#| label: get-data

pmtdb1 <- readRDS(fs::path(PDINTERMEDIATE, "pmt_final.rds"))
glimpse(pmtdb1)
head(pmtdb1)

uqmta <- readRDS(fs::path(PDINTERMEDIATE, "uqmta.rds")) # non-totals qcew
qcew_tots <- uqmta |> 
  summarise(across(c(estabs, emp, payroll), sum),
            .by=c(owner, status)) |> 
  mutate(avgpay = payroll / emp,
         avgpayroll = payroll / estabs)
qcew_tots

```

## Forecast 2023 data to 2024

Only eval when assumptions or data have changed.

```{r}
#| label: forecast-underlying-data
#| eval: false

# first forecast to 2024 and calibrate
# growth rates emp 1.9 wage rate 2.1 nyc council https://council.nyc.gov/wp-content/uploads/2024/03/Dashboard_FY25-Prelim_EMBARGOED.pdf
# that was before start of the year chatbots suggest higher wage growth

# 2023 to 2024 growth rates
empgrowth <- .02
wagerategrowth <- .04

# first, update base data to 2024 and ensure internal consistency
# grow all employment items including range endpoints
# do NOT grow number of establishments
# grow total payroll
pmtdb2 <- pmtdb1 |> 
  select(year, owner, area, nyc, naics, qtitle, status, estabs, emp, payroll, esize, elb, eub, esize_estabsadj, esize_avgemp) |> 
  mutate(year=2024,
         across(c(emp, elb, eub, esize_avgemp),
                \(x) x * (1 + empgrowth)),
         payroll = payroll * (1 + empgrowth) * (1 + wagerategrowth))

# check totals variables; also compare 2023 to raw qcew data
bind_rows(pmtdb1 |> mutate(src="y2023"),
          pmtdb2 |> mutate(src="y2024")) |> 
  summarise(payroll=first(payroll),
            emp=first(emp),
            .by=c(src, area, naics)) |> 
  summarise(payroll=sum(payroll),
            emp=sum(emp), 
            .by=src) |> 
  mutate(avgpay=payroll / emp) |> 
  pivot_longer(-src) |> 
  pivot_wider(names_from = src) |> 
  mutate(pch=y2024 / y2023 - 1)

qcew_tots

# check details variables
bind_rows(pmtdb1 |> mutate(src="y2023"),
          pmtdb2 |> mutate(src="y2024")) |>
  mutate(emp = esize_estabsadj * esize_avgemp) |> 
  summarise(emp=sum(emp), .by=src) |> 
  pivot_longer(cols = emp) |> 
  pivot_wider(names_from = src) |> 
  mutate(pch=y2024 / y2023 - 1)

qcew_tots

pmtdb3 <- pmtdb2 |> 
  mutate(esize_emp = esize_estabsadj * esize_avgemp, # number of estabs * avgemp
         esize_avgpay = payroll / emp, # same for everyone
         esize_payroll = esize_avgpay * esize_emp,
         esize_payestab = esize_payroll / esize_estabsadj)

```

## Calculate 2024 tax, examine and possibly calibrate, and save

Only run data creation when assumptions or data have changed.

However, do run the base-rate schedules and the get_info function.

```{r}
#| label: base-rate-schedules

base_rates <- read_csv(
"payroll_ub, nyc, suburbs
1.25e6, 0, 0
1.5e6, 0.0011, 0.0011
1.75e6, 0.0023, 0.0023
Inf, 0.0060, 0.0034
")
base_rates

```

```{r}
#| label: functions

get_info <- function(payroll, nyc, rates, prefix="base_"){
  # function to get tax rate and payroll bounds for a given
  # record, given a rate schedule
   # get rate indexes
   index <- sapply(payroll, \(x) which(rates$payroll_ub > x)[1])
   colname <- ifelse(nyc, "nyc", "suburbs")
   ub <- rates$payroll_ub[index]
   lb <- numeric(length(ub)) # fill with zeros
   ilbnz <- index[index > 1] - 1
   lb[index > 1] <- rates$payroll_ub[ilbnz]
   df <- rates[index, ] |> 
     mutate(colname=colname,
            rate=ifelse(colname=="nyc", nyc, suburbs),
            payroll_lb = lb,
            payroll_ub = ub) |> 
     select(payroll_lb, payroll_ub, rate) |> 
     rename_with(.fn = \(x) paste0(prefix, x))
   df
}

```

```{r}
#| label: calc-2024-tax-and-calibrate-and-save
#| eval: false

# wage tax per tax dept monthly collections, 2024 -- $2,960.405 million
# target_tax_2024 <- 2960.405 * 1e6 # my Nov 2024 forecast
target_tax_2024 <- 2924.692 * 1e6 # actual Oct 2023 - Sep 2024
# target_tax_2024 <- 2924.692 * 1e6 * .95 # if 5% of total is late payments

taxdata_raw <- pmtdb3 |> 
  # drop any records we created where there are zero establishments as CBP would not have shown that
  # however, we don't drop records where there are establishments but zero employment because CBP data might have shown that
  filter(esize_estabsadj != 0) |> # PERHAPS DO THIS EARLIER, IN FILE CREATION, RATHER THAN HERE??? or maybe this is best
  # esize_payestab is average pay-per-establishment in a given establishment size group (defined by # of employees per establishment)
  # esize_payroll is total payroll in the group
  mutate(get_info(esize_payestab, nyc, rates=base_rates),
         base_tax= esize_payroll * base_rate)

# calculate total tax and calibrate to target
taxraw_tots <- taxdata_raw |> 
  mutate(nestabs_taxable = esize_estabsadj * (base_tax > 0),
         emp_taxable = esize_emp * (base_tax > 0),
         payroll_taxable = esize_payroll  * (base_tax > 0)) |> 
  summarise(across(c(nestabs_taxable, emp_taxable, payroll_taxable, esize_estabsadj, esize_emp, esize_payroll, base_tax), sum)) |> 
  mutate(avgpay=payroll_taxable / emp_taxable,
         base_etr = base_tax / payroll_taxable)
  
taxraw_tots # $2.567 billion calculated vs. ~$2.925 billion from collections -- about $358m
# perhaps $200m could come from that?
qcew_tots

# determine adjustment -- about 8-15% upward adjustment depending on 2024 assumption -- we'll do entirely through payroll?
# what would cause this? 
#   all 12-month periods near 2024 have ~$2.9 to $2.95 billion; we are short maybe $350 million
#   could collections reflect late payments?
#   are some government entities taxable? yes -- maybe $100-200 of that could be govts, maybe rest could be distrib of firm size
#   could firms be larger than establishments so that tax rates are higher than I use?
#   could I need to distribute establishments better giving more larger establishments
# (payroll_adjust <- target_tax_2024 / taxraw_tots$tax) # 13.9% with my favored adjustment

# according to chatgpt: 
  # State and Local Government Entities: The MCTMT does not explicitly exempt
  # state or local government entities from its provisions. Therefore, unless
  # another specific exemption applies, these entities are subject to the tax if
  # they meet the general criteria.

# SOLUTION: DO NOT adjust details, but adjust at the end if needed, later maybe revisit distribution of establishments
# 
# save baseline tax for 2024 ----

# mutate(get_info(esize_payestab, nyc, rates=alt_rates, prefix="alt_")) |> 

saveRDS(taxdata_raw, fs::path(PDINTERMEDIATE, "pmt2024_baseline.rds"))

```

## Get baseline facts

```{r}
#| label: paygroup-helpers

# payroll cutpoints and labels

cutlabs <- function(payroll_cuts){
  # return a tibble with labels for ranges
  cutlen <- length(payroll_cuts)
  paybounds <- tibble(paygroup=1:(cutlen - 1),
                      lb = payroll_cuts[-cutlen],
                      ub = payroll_cuts[-1]) |> 
    mutate(lb_label = scales::label_comma()(lb),
           ub_label = scales::label_comma()(ub)) |> 
    mutate(range_left = paste0(">= ", lb_label, " - < ", ub_label),
           range_right = paste0("> ", lb_label, " - <= ", ub_label))
  paybounds
}

getlabel <- function(paygroup, labels, rightleft="left"){
  i <- match(paygroup, labels$paygroup)
  colname <- paste0("range_", rightleft)
  labels[i, colname] |> pull()
}

# getlabel(7:10, paygroup_labels)

(payroll_cuts <- c(seq(0, 2e6, 200e3), seq(2e6, 5e6, 1e6), Inf) |> unique())

paygroup_labels <- cutlabs(payroll_cuts)

(test_pay <- c(-1e3, seq(0, 5.2e6, 200e3), Inf))
test_cuts <- cut(test_pay, payroll_cuts, right=FALSE, labels=FALSE)
tibble(pay=test_pay, paygroup=test_cuts) |> 
  left_join(paygroup_labels, by = join_by(paygroup)) |> 
  select(pay, range_left, paygroup)

```

```{r}
#| label: reporting-helpers



```

```{r}
#| label: baseline-facts
#| output: false

pmtbl <- readRDS(fs::path(PDINTERMEDIATE, "pmt2024_baseline.rds"))
glimpse(pmtbl)

# define payroll cuts and labels
(payroll_cuts <- c(seq(0, 2e6, 200e3), seq(2e6, 5e6, 1e6), Inf) |> unique())
paygroup_labels <- cutlabs(payroll_cuts)

pmtbl2 <- pmtbl |> 
  mutate(paygroup=cut(esize_payestab, payroll_cuts, right=FALSE, labels=FALSE),
         paylabel=getlabel(paygroup, paygroup_labels)) |> 
  arrange(paygroup)

tabdata <- pmtbl2 |> 
  summarise(n=n(),
            across(c(esize_estabsadj, 
                     esize_emp,
                     esize_payroll,
                     base_tax),
                   \(x) sum(x)),
                   .by=c(paygroup, paylabel)) |> 
  mutate(taxpct=base_tax / sum(base_tax)) |> 
  select(-paygroup, -n) |> 
  janitor::adorn_totals()

```

### Current Total MTA region tax by firm size

```{r}
#| label: total-tax
#| output: true

tabdata |> 
  gt() |> 
  tab_header("Estimated distribution of PMT wage tax by establishment payroll size, 2024",
             subtitle = "Private sector only. Amounts in $ millions") |> 
  cols_label(paylabel="Average establishment payroll ($)",
             esize_estabsadj="# of establishments",
             esize_emp="# of employees",
             esize_payroll="Total payroll ($m)",
             base_tax="PMT wage tax ($m)",
             taxpct="Tax as % of total") |> 
  fmt_number(columns = c(esize_estabsadj, esize_emp), decimals=0) |>
  fmt_number(columns = c(esize_payroll, base_tax), scale=1e-6, decimals=1) |>
  fmt_currency(rows=c(1, nrow(tabdata)), columns = c(esize_payroll, base_tax), scale=1e-6, decimals=1) |> 
  fmt_percent(columns = c(taxpct), decimals=1)  |> 
  tab_source_note(source_note = "Source: Melding of Quarterly Census of Employment and Wages with County Business Patterns") |> 
  tab_source_note(source_note = "Note: Estimated tax above is approximately 14% lower than total wage tax collections. Possible reasons: (1) Some state and local government entities are taxed but not included above. This could be a substantial part of the difference. (2) True tax rates are based on firm size in MTA region, for which there is little data, but calculations are based on establishment size. Establishments in multi-establishment firms are smaller than firms so calculated tax rates are biased downward. (3) Estimated distribution of establishments by size rely on County Business Patterns for 2021 plus various estimation techniques. This could result in downward bias of tax revenue, but that seems unlikely given the methods used.")

```

### Current MTA region tax by firm size and NYC-suburbs

```{r}
#| label: tax-mta-suburbs


data1 <- pmtbl2 |> 
  summarise(n=n(),
            across(c(esize_estabsadj, 
                     esize_emp,
                     esize_payroll,
                     base_tax),
                   \(x) sum(x)),
                   .by=c(nyc, paygroup, paylabel))

data1

tabdata <- data1 |> 
  select(-n, -esize_emp) |> 
  mutate(nyc=factor(nyc, levels=c(TRUE, FALSE), labels = c("NYC", "Suburbs"))) |> 
  pivot_wider(names_from=nyc, values_from = c(esize_estabsadj, esize_payroll, base_tax)) |> 
  mutate(base_total_tax=base_tax_NYC + base_tax_Suburbs) |> 
  arrange(paygroup) |> 
  select(paylabel, contains("NYC"), contains("Suburbs"), base_total_tax) |> 
  janitor::adorn_totals() |> 
  mutate(nyc_tax_share=base_tax_NYC / base_total_tax)
  
             # esize_estabsadj="# of establishments",
             # esize_emp="# of employees",
             # esize_payroll="Total payroll ($m)",
             # base_tax="PMT wage tax ($m)",
             # taxpct="Tax as % of total") |> 

tabdata |> 
  gt() |> 
  tab_header("Estimated distribution of PMT wage tax by establishment payroll size, 2024",
             subtitle = "Private sector only. Amounts in $ millions") |> 
  cols_label(paylabel="Average establishment payroll ($)",
             contains("estabsadj") ~ "# of establishments",
             contains("payroll") ~ "Total payroll ($m)",
             contains("base_tax") ~ "PMT wage tax ($m)",
             base_total_tax = "Total PMT wage tax ($m)",
             nyc_tax_share = "NYC share of tax") |> 
  fmt_number(columns = contains("estabsadj"), decimals=0) |>
  fmt_number(columns = c(contains("tax")), scale=1e-6, decimals=1) |>
  # fmt_currency(rows=c(1, nrow(tabdata)), columns = c(esize_payroll, base_tax), scale=1e-6, decimals=1) |> 
  fmt_percent(columns = c(taxpct), decimals=1)  |> 
  tab_source_note(source_note = "Source: Melding of Quarterly Census of Employment and Wages with County Business Patterns") |> 
  tab_source_note(source_note = "Note: Estimated tax above is approximately 14% lower than total wage tax collections. Possible reasons: (1) Some state and local government entities are taxed but not included above. This could be a substantial part of the difference. (2) True tax rates are based on firm size in MTA region, for which there is little data, but calculations are based on establishment size. Establishments in multi-establishment firms are smaller than firms so calculated tax rates are biased downward. (3) Estimated distribution of establishments by size rely on County Business Patterns for 2021 plus various estimation techniques. This could result in downward bias of tax revenue, but that seems unlikely given the methods used.")


# |> 
#   mutate(taxpct=base_tax / sum(base_tax)) |> 
#   select(-paygroup, -n) |> 
#   janitor::adorn_totals()



```

```{r stop_here, echo=FALSE}
knitr::knit_exit()
```

## Examine alternative policies

```{r}
#| label: get-pmt-2024-baseline

pmtbl <- readRDS(fs::path(PDINTERMEDIATE, "pmt2024_baseline.rds"))
glimpse(pmtbl)

```

### What combination of raising bottom bracket (exclusion) and raising top rate MTA-wide is revenue-neutral?

```{r}
#| label: calc-taxes


# growth rates emp 1.9 wage rate 2.1 nyc council https://council.nyc.gov/wp-content/uploads/2024/03/Dashboard_FY25-Prelim_EMBARGOED.pdf

empgrowth <- .019
wagerategrowth <- .021

pmtdb2 <- pmtdb |> 
  mutate(across(c(emp, elb, eub, esize_avgemp, esize_emp),
                \(x) x * (1 + empgrowth)),
         across(c(esize_avgpay),
                \(x) x * (1 + wagerategrowth))) 
  # now recalc all things that need both emp and avg pay




alt_rates <- read_csv(
"payroll_ub, nyc, suburbs
1.5e6, 0.0, 0.0
1.75e6, 0.0023, 0.0023
Inf, 0.00606, 0.0034034
")
alt_rates
# wage tax per tax dept monthly collections, 2024 -- $2,960.405 million


# , prefix="alt_"

taxdata <- pmtdb2 |> 
  filter(esize_estabsadj != 0) |> 
  mutate(get_info(esize_payestab, nyc, rates=base_rates)) |>
  mutate(get_info(esize_payestab, nyc, rates=alt_rates, prefix="alt_")) |> 
  mutate(tax=esize_payestab * rate,
         alt_tax = esize_payestab * alt_rate) |>
  summarise(n=n(),
            estabs=sum(esize_estabsadj, na.rm=TRUE),
            emp=sum(esize_emp, na.rm=TRUE),
            payroll=sum(esize_payroll, na.rm=TRUE),
            tax = sum(tax * esize_estabsadj, na.rm=TRUE),
            alt_tax = sum(alt_tax * esize_estabsadj, na.rm=TRUE),
            .by=c(nyc, payroll_lb, payroll_ub)) |>
  arrange(nyc, payroll_lb)

# |>   janitor::adorn_totals()

taxdata |> 
  janitor::adorn_totals() |> 
  mutate(change=alt_tax - tax)

taxdata |> 
  knitr::kable()

taxdata |> gt()
taxdata |> mutate(etr=tax / payroll) |> gt()

rates
index <- c(1, 4)
colname <- c("suburbs", "nyc")
colnum <- c(3, 2)
rates[cbind(index, colnum)]
rates[cbind(index, colname)]

tbl <- tibble(nyc=c(.01, .02, .03, .04),
              suburbs=c(.09, .08, .07, .06))
index <- c(1, 4)
colname <- c("nyc", "suburbs")
tbl[index, colname]
result <- tbl[cbind(index, colname)]
  


```
