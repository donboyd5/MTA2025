---
output: html_document
editor_options: 
  chunk_output_type: console
---

# Create pmt file

```{r}
#| label: setup
#| include: false

source(here::here("R", "libraries.r"))
source(here::here("R", "libraries_ts.r"))
source(here::here("R", "constants.r"))
source(here::here("R", "functions.r"))

library(zip)
library(lobstr)

```

## Match QCEW and SUSB firm sizes

```{r}
#| label: get-data

susb <- readRDS(fs::path(PDINTERMEDIATE, "susb2021_nysmta_shares_adj.rds"))

qcew <- readRDS(fs::path(PDINTERMEDIATE, "qcewstco.rds"))
glimpse(qcew)
count(qcew, areatype)
tmp <- count(qcew, naics_level, naics, title)

qmta <- qcew |> 
  mutate(naics_level=ifelse(naics=="00", 1, naics_level)) |> 
  filter(areatype == "county", mta, year==max(year), naics_level <= 3)
count(qmta, area)
count(qmta, owner)
count(qmta, naics_level)
tmp <- count(qmta, naics_level, naics, title)
#   owner                            n
#   <chr>                        <int>
# 1 Federal Government             204
# 2 Local Government                95
# 3 Private                       1102
# 4 State Government                81
# 5 Total Government               163
# 6 Total Private and Government  1161

tmp <- qcew |> 
  filter(areatype == "county", nyc, year==max(year))

tmp |> 
  filter(naics=="00") |> 
  filter(owner=="Total Private and Government") |>
  summarise(across(c(estab, avgemp, totwage), sum))



```

```{r}
#| label: create-qcew-susb-naics-crosswalk
#| eval: false


# I made a qcew-susb naics crosswalk manually - saving unique naics for each and then creating an excel spreadsheet ----

#.. save the two sets of naics codes ----
count(qmta, naics_level, naics, title) |> 
  write.xlsx(fs::path(PDINTERMEDIATE, "qmta_naics.xlsx"))

susb |>
  filter(!is.na(naics)) |> 
  select(naics, stitle=description) |> 
  mutate(naics_level=case_when(nchar(naics) == 2 ~ 2,
                               nchar(naics) == 3 ~ 3,
                               str_detect(naics, "-") ~ 2,
                               .default = 0)) |> 
  count(naics_level, naics, stitle) |> 
  write.xlsx(fs::path(PDINTERMEDIATE, "susb_naics.xlsx"))

#.. read the hand-created xwalk ----

# qnaics1 <- count(qmta, naics_level, naics, title) # 115
# 
# 
# anyDuplicated(qnaics1$naics) # 0
# qnaics2 <- qnaics1 |> 
#     select(naics_level, naics, qtitle=title, qn=n) |> 
#     mutate(qnaics=naics,
#            naics=case_when(naics %in% c("31", "32", "33") ~ "31-33",
#                            naics %in% c("44", "45") ~ "44-45",
#                            naics %in% c("48", "49") ~ "48-49",
#                            .default = qnaics))
# 
# snaics1 <- count(susb, naics_group, naics, description) # 106
# anyDuplicated(snaics1$naics) # 0
# 
# snaics2 <- snaics1 |> 
#   filter(!is.na(naics)) |> 
#   select(naics, stitle=description, sn=n) |> 
#   mutate(snaics=naics,
#          naics_level=case_when(nchar(naics) == 2 ~ 2,
#                                nchar(naics) == 3 ~ 3,
#                                str_detect(naics, "-") ~ 2,
#                                .default = 0)) |> 
#   relocate(naics_level)
# anyDuplicated(snaics2$naics) # 0
# 
# snaics3 <- snaics2 |> 
#   mutate(naics=case_when(snaics %in% c("442", "443") ~ "449",
#                          snaics %in% c("446") ~ "456",
#                          snaics %in% c("447") ~ "457",
#                          snaics %in% c("448") ~ "458",
#                          snaics %in% c("451", "453", "454") ~ "459", # 454 not good match
#                          snaics %in% c("452") ~ "455",
#                          snaics %in% c("515", "511") ~ "513",
#                          .default = snaics))
# 
# nxw <- full_join(
#   qnaics2,
#   snaics3,
#   by = join_by(naics_level, naics)) |> 
#   select(naics_level, naics, qnaics, snaics, qtitle, stitle, qn, sn) |> 
#   filter(!(is.na(naics)), naics != "00") |> 
#   arrange(naics_level, naics)
# anyDuplicated(nxw$naics) # 0
# anyDuplicated(nxw$qnaics) # 59
# nxw$qnaics[duplicated(nxw$qnaics)]
# 
# stoq <- nxw |> 
#   select(naics_level, naics, snaics, stitle) |> 
#   distinct()

# snaics3 <- snaics2 |>  
#     mutate(snaics=naics,
           # naics=case_when(
           #                 snaics %in% c("442", "443") ~ "449",
           #                 snaics %in% c("446") ~ "456",
           #                 snaics %in% c("447") ~ "457",
           #                 snaics %in% c("448") ~ "458",
           #                 snaics %in% c("451", "453", "454") ~ "459", # 454 not good match
           #                 snaics %in% c("452") ~ "455",
           #                 snaics %in% c("515", "511") ~ "513",
           #                 .default = snaics))
#   



# 449 459 513

# naics will be the common variable it should have no duplicates
# multiple snaics can match to one naics
# multiple qnaics can match to one naics
# naics_xwalk <- full_join(
#   qnaics |> 
#     select(naics, qtitle=title, qn=n) |> 
#     mutate(qnaics=naics,
#            naics=case_when(naics %in% c("31", "32", "33") ~ "31-33",
#                            naics %in% c("44", "45") ~ "44-45",
#                            naics %in% c("48", "49") ~ "48-49",
#                            .default = qnaics)),
#   snaics |> 
#     select(naics, stitle=description, sn=n) |> 
#     mutate(snaics=naics,
#            naics=case_when(
#                            snaics %in% c("442", "443") ~ "449",
#                            snaics %in% c("446") ~ "456",
#                            snaics %in% c("447") ~ "457",
#                            snaics %in% c("448") ~ "458",
#                            snaics %in% c("451", "453", "454") ~ "459", # 454 not good match
#                            snaics %in% c("452") ~ "455",
#                            snaics %in% c("515", "511") ~ "513",
#                            .default = snaics)),
#   by = join_by(naics)) |> 
#   filter(!(is.na(naics)), naics != "00") |> 
#   # fix a few more
#   mutate(snaics = case_when(
#     naics %in% c("111", "112", "516") ~ str_sub(naics, 1, 2),
#     .default = snaics)) |> 
#   # fill in missing stitles
#   arrange(snaics, stitle) |> 
#   mutate(stitle= ifelse(is.na(stitle), first(stitle), stitle),
#          .by=snaics) |> 
#   mutate(level = nchar(naics),
#          level = ifelse(str_detect(naics, "-"), 2, level)) |> 
#   relocate(level) |>
#   filter(!is.na(naics)) |>
#   arrange(level, naics)
# now we should be able to walk between qcew and susb naics except for government, private households, and unclassified


# firmsize != "1: Total" & naics != "--" &
#   (nchar(naics) ==2 | str_detect(naics, "-")) ~ "4 2-digit naics by firm sizes",
#     firmsize != "1: Total" & naics != "--" &
#   nchar(naics) == 3                           ~ "6 3-digit naics by firm size",

```

## Merge qcew and susb data

```{r}
#| label: explore-qmta

# qmta: we want area
qmta |> 
  select(-areatype) |> 
  summarise(avgemp=sum(avgemp),
            totwage=sum(totwage),
            .by=c(owner, naics_level)) |> 
  arrange(owner, naics_level)
# sums are very good / close across naics_levels for
#   federal govt, private, private and govt
#   not close for local govt, state govt where
#     IF we want completeness we need level 1
            
# match private qmta with susb
# then build rest of database



```

```{r}
#| label: merge-qmta-susb

glimpse(qmta) # 2023 2086 records
glimpse(susb) # 2021

xwalk1 <- read_excel(fs::path(PDINTERMEDIATE, "naics_xwalk.xlsx"),
                     sheet="xwalk",
                     skip=2,
                     col_types="text") |> 
  select(qnaics_level, qnaics, qtitle, snaics) |> 
  mutate(owner="Private")

# we can only match private sector firms
qmta_prep <- qmta |> 
  filter(owner %in% c("Private", "State Government", "Local Government", "Federal Government")) |> 
  left_join(xwalk1 |> 
              select(-qnaics_level),
            by = join_by(owner, naics==qnaics))

tmp <- count(qmta_prep, owner, naics, qtitle, snaics)

susb_prep <- susb |> 
  mutate(area=paste0(county, " County"), owner="Private") |> 
  select(owner, cofips, county, area, snaics=naics, stitle=description, fs_group, fscode, firmsize, fslb, fsub,
         empfirm_adj, firms_adj, estabs_adj, emp, payroll, payroll_grp)

matched <- qmta_prep |> 
  left_join(susb_prep, by=join_by(owner, area, snaics),
            relationship = "many-to-many")

glimpse(matched)
count(qmta_prep, owner)
count(susb_prep, owner)
count(matched, owner)
count(matched, fscode, fs_group, firmsize)

# spread 
tmp <- matched |> 
  filter(owner=="Private", cofips=="005", naics=="23") |> 
  select(county, title, estab, avgemp, totwage, fs_group:payroll_grp)
tmp
tmp |> 
  summarise(firms_adj=sum(firms_adj), estabs_adj=sum(estabs_adj), payroll=sum(payroll), .by=fs_group)


matched2 <- matched |> 
  mutate(estab_fs=estabs_adj * estab / sum(estabs_adj),
         emp_fs = emp * avgemp / sum(emp),
         payroll_fs = totwage * payroll / sum(payroll),
         .by=c(area, naics, owner))

tmp2 <- matched2 |> 
  filter(owner=="Private", cofips=="005", naics=="23") |> 
  select(county, title, estab, avgemp, totwage, fs_group:payroll_grp, ends_with("_fs"))
tmp2
tmp2 |> 
  summarise(firms_adj=sum(firms_adj), estabs_adj=sum(estabs_adj), payroll=sum(payroll), .by=fs_group)

tmp2 |> 
  summarise(totwage=first(totwage), firms_adj=sum(firms_adj), estabs_adj=sum(estabs_adj), payroll=sum(payroll), payroll_fs=sum(payroll_fs))




```

```{r stop_here, echo=FALSE}
knitr::knit_exit()
```
